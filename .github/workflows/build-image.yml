name: Local Build

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  REGISTRY: local

on:
  push:
    branches:
      - '**'
      - '!main'
  pull_request:
    branches:
      - 'main'

jobs:
  simple_base_images:
    runs-on: ubuntu-latest
    steps:
     - name: Checkout
       uses: actions/checkout@v3.4.0
     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v2
     - name: Build and export
       uses: docker/build-push-action@v4
       with:
         context: .
         file: p4.dockerfile
         outputs: type=docker,dest=/tmp/p4.tar
         target: p4c
         tags: ${{ env.REGISTRY }}/p4:${{ env.BRANCH_NAME }}
     - name: Upload artifact
       uses: actions/upload-artifact@v3
       with:
         name: p4
         path: /tmp/p4.tar

  # simple_singlestage_images_alpine:
  #   needs: simple_base_images
  #   strategy:
  #     matrix:
  #       singlestage_images: [ab, apache, coredns, frr, ipv6, quagga, traefik, wireguard, sflowrt]
  #   runs-on: ubuntu-latest
  #   steps:
  #    - name: Checkout
  #      uses: actions/checkout@v3.4.0
  #    # https://github.com/docker/setup-buildx-action
  #    - name: Download artifact
  #      uses: actions/download-artifact@v3
  #      with:
  #        name: alpine
  #        path: /tmp
  #    - name: Load image
  #      run: |
  #        docker load --input /tmp/alpine.tar
  #        docker image ls -a
  #    - name: Set up Docker Buildx
  #      uses: docker/setup-buildx-action@v2
  #      with:
  #         driver: docker
  #    - name: Build and export
  #      uses: docker/build-push-action@v4
  #      with:
  #        context: ./singlestage_images/
  #        file: ./singlestage_images/${{ matrix.singlestage_images }}.dockerfile
  #        push: false
  #        load: true
  #        tags: ${{ env.REGISTRY }}/${{ matrix.singlestage_images }}:${{ env.BRANCH_NAME }}
  #        build-args: |
  #          image=${{ env.REGISTRY }}/alpine:${{ env.BRANCH_NAME }}
  #
  #    - name: List images
  #      run: docker image ls -a
